class Solution {
public:
    unordered_map<int,vector<int>>umap;
    int ans=0;
    int mx=0;

    void dfs(int manager,vector<int>&informTime){
      mx=max(mx,ans);
      for(auto emp : umap[manager]){
        ans=ans+informTime[manager];
        cout<<ans;
        dfs(emp,informTime);
        ans=ans-informTime[manager]; 
      }

    }

    int numOfMinutes(int n, int headID, vector<int>& manager, vector<int>& informTime) {

      // fill umap
      for(int i=0;i<n;i++)
      {
        if(manager[i]!=-1)
        {
          umap[manager[i]].push_back(i);
        }
      }

      dfs(headID,informTime);
      return mx;
    }
};
